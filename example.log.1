DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: cn.com.kc.blog.pojo.BlogEntity.comments
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update BLOG_COMMENT set ENTITY_ID=? where id=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update BLOG_COMMENT set ENTITY_ID=null where ENTITY_ID=? and id=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update BLOG_COMMENT set ENTITY_ID=null where ENTITY_ID=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: cn.com.kc.blog.pojo.BlogUser.entities
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update BLOG_ENTITY set USER_ID=? where id=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update BLOG_ENTITY set USER_ID=null where USER_ID=? and id=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update BLOG_ENTITY set USER_ID=null where USER_ID=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: cn.com.kc.blog.pojo.BlogUser.comments
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update BLOG_COMMENT set USER_ID=? where id=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update BLOG_COMMENT set USER_ID=null where USER_ID=? and id=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update BLOG_COMMENT set USER_ID=null where USER_ID=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: cn.com.kc.blog.pojo.BlogEntity.categorys
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: insert into BLOG_ENTITY_CATE (CATE_ID, ENTITY_ID) values (?, ?)
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update BLOG_ENTITY_CATE set ENTITY_ID=? where CATE_ID=? and ENTITY_ID=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: delete from BLOG_ENTITY_CATE where CATE_ID=? and ENTITY_ID=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: delete from BLOG_ENTITY_CATE where CATE_ID=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: cn.com.kc.blog.pojo.BlogCategory.children
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update BLOG_CATEGORY set PARENT_ID=? where id=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update BLOG_CATEGORY set PARENT_ID=null where PARENT_ID=? and id=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update BLOG_CATEGORY set PARENT_ID=null where PARENT_ID=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: cn.com.kc.blog.pojo.BlogUser.authorities
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update AUTHORITIES set USER_ID=? where id=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update AUTHORITIES set USER_ID=null where USER_ID=? and id=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update AUTHORITIES set USER_ID=null where USER_ID=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: cn.com.kc.blog.pojo.BlogCategory.entities
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: insert into BLOG_ENTITY_CATE (ENTITY_ID, CATE_ID) values (?, ?)
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update BLOG_ENTITY_CATE set CATE_ID=? where ENTITY_ID=? and CATE_ID=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: delete from BLOG_ENTITY_CATE where ENTITY_ID=? and CATE_ID=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: delete from BLOG_ENTITY_CATE where ENTITY_ID=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogImage [NONE]: select blogimage0_.id as id4_0_, blogimage0_.ENTITY_ID as ENTITY4_4_0_, blogimage0_.name as name4_0_, blogimage0_.position as position4_0_ from BLOG_IMAGE blogimage0_ where blogimage0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogImage [READ]: select blogimage0_.id as id4_0_, blogimage0_.ENTITY_ID as ENTITY4_4_0_, blogimage0_.name as name4_0_, blogimage0_.position as position4_0_ from BLOG_IMAGE blogimage0_ where blogimage0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogImage [UPGRADE]: select blogimage0_.id as id4_0_, blogimage0_.ENTITY_ID as ENTITY4_4_0_, blogimage0_.name as name4_0_, blogimage0_.position as position4_0_ from BLOG_IMAGE blogimage0_ where blogimage0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogImage [UPGRADE_NOWAIT]: select blogimage0_.id as id4_0_, blogimage0_.ENTITY_ID as ENTITY4_4_0_, blogimage0_.name as name4_0_, blogimage0_.position as position4_0_ from BLOG_IMAGE blogimage0_ where blogimage0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogImage [FORCE]: select blogimage0_.id as id4_0_, blogimage0_.ENTITY_ID as ENTITY4_4_0_, blogimage0_.name as name4_0_, blogimage0_.position as position4_0_ from BLOG_IMAGE blogimage0_ where blogimage0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogImage [PESSIMISTIC_READ]: select blogimage0_.id as id4_0_, blogimage0_.ENTITY_ID as ENTITY4_4_0_, blogimage0_.name as name4_0_, blogimage0_.position as position4_0_ from BLOG_IMAGE blogimage0_ where blogimage0_.id=? lock in share mode
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogImage [PESSIMISTIC_WRITE]: select blogimage0_.id as id4_0_, blogimage0_.ENTITY_ID as ENTITY4_4_0_, blogimage0_.name as name4_0_, blogimage0_.position as position4_0_ from BLOG_IMAGE blogimage0_ where blogimage0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogImage [PESSIMISTIC_FORCE_INCREMENT]: select blogimage0_.id as id4_0_, blogimage0_.ENTITY_ID as ENTITY4_4_0_, blogimage0_.name as name4_0_, blogimage0_.position as position4_0_ from BLOG_IMAGE blogimage0_ where blogimage0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogImage [OPTIMISTIC]: select blogimage0_.id as id4_0_, blogimage0_.ENTITY_ID as ENTITY4_4_0_, blogimage0_.name as name4_0_, blogimage0_.position as position4_0_ from BLOG_IMAGE blogimage0_ where blogimage0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogImage [OPTIMISTIC_FORCE_INCREMENT]: select blogimage0_.id as id4_0_, blogimage0_.ENTITY_ID as ENTITY4_4_0_, blogimage0_.name as name4_0_, blogimage0_.position as position4_0_ from BLOG_IMAGE blogimage0_ where blogimage0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity cn.com.kc.blog.pojo.BlogImage: select blogimage0_.id as id4_0_, blogimage0_.ENTITY_ID as ENTITY4_4_0_, blogimage0_.name as name4_0_, blogimage0_.position as position4_0_ from BLOG_IMAGE blogimage0_ where blogimage0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity cn.com.kc.blog.pojo.BlogImage: select blogimage0_.id as id4_0_, blogimage0_.ENTITY_ID as ENTITY4_4_0_, blogimage0_.name as name4_0_, blogimage0_.position as position4_0_ from BLOG_IMAGE blogimage0_ where blogimage0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogUser [NONE]: select bloguser0_.id as id5_0_, bloguser0_.address as address5_0_, bloguser0_.createTime as createTime5_0_, bloguser0_.email as email5_0_, bloguser0_.enabled as enabled5_0_, bloguser0_.password as password5_0_, bloguser0_.phoneNumber as phoneNum7_5_0_, bloguser0_.showName as showName5_0_, bloguser0_.USERNAME as USERNAME5_0_, bloguser0_.validateCode as validat10_5_0_ from USERS bloguser0_ where bloguser0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogUser [READ]: select bloguser0_.id as id5_0_, bloguser0_.address as address5_0_, bloguser0_.createTime as createTime5_0_, bloguser0_.email as email5_0_, bloguser0_.enabled as enabled5_0_, bloguser0_.password as password5_0_, bloguser0_.phoneNumber as phoneNum7_5_0_, bloguser0_.showName as showName5_0_, bloguser0_.USERNAME as USERNAME5_0_, bloguser0_.validateCode as validat10_5_0_ from USERS bloguser0_ where bloguser0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogUser [UPGRADE]: select bloguser0_.id as id5_0_, bloguser0_.address as address5_0_, bloguser0_.createTime as createTime5_0_, bloguser0_.email as email5_0_, bloguser0_.enabled as enabled5_0_, bloguser0_.password as password5_0_, bloguser0_.phoneNumber as phoneNum7_5_0_, bloguser0_.showName as showName5_0_, bloguser0_.USERNAME as USERNAME5_0_, bloguser0_.validateCode as validat10_5_0_ from USERS bloguser0_ where bloguser0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogUser [UPGRADE_NOWAIT]: select bloguser0_.id as id5_0_, bloguser0_.address as address5_0_, bloguser0_.createTime as createTime5_0_, bloguser0_.email as email5_0_, bloguser0_.enabled as enabled5_0_, bloguser0_.password as password5_0_, bloguser0_.phoneNumber as phoneNum7_5_0_, bloguser0_.showName as showName5_0_, bloguser0_.USERNAME as USERNAME5_0_, bloguser0_.validateCode as validat10_5_0_ from USERS bloguser0_ where bloguser0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogUser [FORCE]: select bloguser0_.id as id5_0_, bloguser0_.address as address5_0_, bloguser0_.createTime as createTime5_0_, bloguser0_.email as email5_0_, bloguser0_.enabled as enabled5_0_, bloguser0_.password as password5_0_, bloguser0_.phoneNumber as phoneNum7_5_0_, bloguser0_.showName as showName5_0_, bloguser0_.USERNAME as USERNAME5_0_, bloguser0_.validateCode as validat10_5_0_ from USERS bloguser0_ where bloguser0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogUser [PESSIMISTIC_READ]: select bloguser0_.id as id5_0_, bloguser0_.address as address5_0_, bloguser0_.createTime as createTime5_0_, bloguser0_.email as email5_0_, bloguser0_.enabled as enabled5_0_, bloguser0_.password as password5_0_, bloguser0_.phoneNumber as phoneNum7_5_0_, bloguser0_.showName as showName5_0_, bloguser0_.USERNAME as USERNAME5_0_, bloguser0_.validateCode as validat10_5_0_ from USERS bloguser0_ where bloguser0_.id=? lock in share mode
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogUser [PESSIMISTIC_WRITE]: select bloguser0_.id as id5_0_, bloguser0_.address as address5_0_, bloguser0_.createTime as createTime5_0_, bloguser0_.email as email5_0_, bloguser0_.enabled as enabled5_0_, bloguser0_.password as password5_0_, bloguser0_.phoneNumber as phoneNum7_5_0_, bloguser0_.showName as showName5_0_, bloguser0_.USERNAME as USERNAME5_0_, bloguser0_.validateCode as validat10_5_0_ from USERS bloguser0_ where bloguser0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogUser [PESSIMISTIC_FORCE_INCREMENT]: select bloguser0_.id as id5_0_, bloguser0_.address as address5_0_, bloguser0_.createTime as createTime5_0_, bloguser0_.email as email5_0_, bloguser0_.enabled as enabled5_0_, bloguser0_.password as password5_0_, bloguser0_.phoneNumber as phoneNum7_5_0_, bloguser0_.showName as showName5_0_, bloguser0_.USERNAME as USERNAME5_0_, bloguser0_.validateCode as validat10_5_0_ from USERS bloguser0_ where bloguser0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogUser [OPTIMISTIC]: select bloguser0_.id as id5_0_, bloguser0_.address as address5_0_, bloguser0_.createTime as createTime5_0_, bloguser0_.email as email5_0_, bloguser0_.enabled as enabled5_0_, bloguser0_.password as password5_0_, bloguser0_.phoneNumber as phoneNum7_5_0_, bloguser0_.showName as showName5_0_, bloguser0_.USERNAME as USERNAME5_0_, bloguser0_.validateCode as validat10_5_0_ from USERS bloguser0_ where bloguser0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogUser [OPTIMISTIC_FORCE_INCREMENT]: select bloguser0_.id as id5_0_, bloguser0_.address as address5_0_, bloguser0_.createTime as createTime5_0_, bloguser0_.email as email5_0_, bloguser0_.enabled as enabled5_0_, bloguser0_.password as password5_0_, bloguser0_.phoneNumber as phoneNum7_5_0_, bloguser0_.showName as showName5_0_, bloguser0_.USERNAME as USERNAME5_0_, bloguser0_.validateCode as validat10_5_0_ from USERS bloguser0_ where bloguser0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity cn.com.kc.blog.pojo.BlogUser: select bloguser0_.id as id5_1_, bloguser0_.address as address5_1_, bloguser0_.createTime as createTime5_1_, bloguser0_.email as email5_1_, bloguser0_.enabled as enabled5_1_, bloguser0_.password as password5_1_, bloguser0_.phoneNumber as phoneNum7_5_1_, bloguser0_.showName as showName5_1_, bloguser0_.USERNAME as USERNAME5_1_, bloguser0_.validateCode as validat10_5_1_, authoritie1_.USER_ID as USER3_5_3_, authoritie1_.id as id3_, authoritie1_.id as id0_0_, authoritie1_.AUTHORITY as AUTHORITY0_0_, authoritie1_.USER_ID as USER3_0_0_ from USERS bloguser0_ left outer join AUTHORITIES authoritie1_ on bloguser0_.id=authoritie1_.USER_ID where bloguser0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity cn.com.kc.blog.pojo.BlogUser: select bloguser0_.id as id5_1_, bloguser0_.address as address5_1_, bloguser0_.createTime as createTime5_1_, bloguser0_.email as email5_1_, bloguser0_.enabled as enabled5_1_, bloguser0_.password as password5_1_, bloguser0_.phoneNumber as phoneNum7_5_1_, bloguser0_.showName as showName5_1_, bloguser0_.USERNAME as USERNAME5_1_, bloguser0_.validateCode as validat10_5_1_, authoritie1_.USER_ID as USER3_5_3_, authoritie1_.id as id3_, authoritie1_.id as id0_0_, authoritie1_.AUTHORITY as AUTHORITY0_0_, authoritie1_.USER_ID as USER3_0_0_ from USERS bloguser0_ left outer join AUTHORITIES authoritie1_ on bloguser0_.id=authoritie1_.USER_ID where bloguser0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogEntity [NONE]: select blogentity0_.id as id3_1_, blogentity0_.commentable as commenta2_3_1_, blogentity0_.content as content3_1_, blogentity0_.createdate as createdate3_1_, blogentity0_.isTemp as isTemp3_1_, blogentity0_.readprivate as readpriv6_3_1_, blogentity0_.title as title3_1_, blogentity0_.USER_ID as USER8_3_1_, categorys1_.CATE_ID as CATE2_3_3_, blogcatego2_.id as ENTITY1_3_, blogcatego2_.id as id1_0_, blogcatego2_.name as name1_0_, blogcatego2_.PARENT_ID as PARENT3_1_0_ from BLOG_ENTITY blogentity0_ left outer join BLOG_ENTITY_CATE categorys1_ on blogentity0_.id=categorys1_.CATE_ID left outer join BLOG_CATEGORY blogcatego2_ on categorys1_.ENTITY_ID=blogcatego2_.id where blogentity0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogEntity [READ]: select blogentity0_.id as id3_1_, blogentity0_.commentable as commenta2_3_1_, blogentity0_.content as content3_1_, blogentity0_.createdate as createdate3_1_, blogentity0_.isTemp as isTemp3_1_, blogentity0_.readprivate as readpriv6_3_1_, blogentity0_.title as title3_1_, blogentity0_.USER_ID as USER8_3_1_, categorys1_.CATE_ID as CATE2_3_3_, blogcatego2_.id as ENTITY1_3_, blogcatego2_.id as id1_0_, blogcatego2_.name as name1_0_, blogcatego2_.PARENT_ID as PARENT3_1_0_ from BLOG_ENTITY blogentity0_ left outer join BLOG_ENTITY_CATE categorys1_ on blogentity0_.id=categorys1_.CATE_ID left outer join BLOG_CATEGORY blogcatego2_ on categorys1_.ENTITY_ID=blogcatego2_.id where blogentity0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogEntity [UPGRADE]: select blogentity0_.id as id3_0_, blogentity0_.commentable as commenta2_3_0_, blogentity0_.content as content3_0_, blogentity0_.createdate as createdate3_0_, blogentity0_.isTemp as isTemp3_0_, blogentity0_.readprivate as readpriv6_3_0_, blogentity0_.title as title3_0_, blogentity0_.USER_ID as USER8_3_0_ from BLOG_ENTITY blogentity0_ where blogentity0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogEntity [UPGRADE_NOWAIT]: select blogentity0_.id as id3_0_, blogentity0_.commentable as commenta2_3_0_, blogentity0_.content as content3_0_, blogentity0_.createdate as createdate3_0_, blogentity0_.isTemp as isTemp3_0_, blogentity0_.readprivate as readpriv6_3_0_, blogentity0_.title as title3_0_, blogentity0_.USER_ID as USER8_3_0_ from BLOG_ENTITY blogentity0_ where blogentity0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogEntity [FORCE]: select blogentity0_.id as id3_0_, blogentity0_.commentable as commenta2_3_0_, blogentity0_.content as content3_0_, blogentity0_.createdate as createdate3_0_, blogentity0_.isTemp as isTemp3_0_, blogentity0_.readprivate as readpriv6_3_0_, blogentity0_.title as title3_0_, blogentity0_.USER_ID as USER8_3_0_ from BLOG_ENTITY blogentity0_ where blogentity0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogEntity [PESSIMISTIC_READ]: select blogentity0_.id as id3_0_, blogentity0_.commentable as commenta2_3_0_, blogentity0_.content as content3_0_, blogentity0_.createdate as createdate3_0_, blogentity0_.isTemp as isTemp3_0_, blogentity0_.readprivate as readpriv6_3_0_, blogentity0_.title as title3_0_, blogentity0_.USER_ID as USER8_3_0_ from BLOG_ENTITY blogentity0_ where blogentity0_.id=? lock in share mode
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogEntity [PESSIMISTIC_WRITE]: select blogentity0_.id as id3_0_, blogentity0_.commentable as commenta2_3_0_, blogentity0_.content as content3_0_, blogentity0_.createdate as createdate3_0_, blogentity0_.isTemp as isTemp3_0_, blogentity0_.readprivate as readpriv6_3_0_, blogentity0_.title as title3_0_, blogentity0_.USER_ID as USER8_3_0_ from BLOG_ENTITY blogentity0_ where blogentity0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogEntity [PESSIMISTIC_FORCE_INCREMENT]: select blogentity0_.id as id3_0_, blogentity0_.commentable as commenta2_3_0_, blogentity0_.content as content3_0_, blogentity0_.createdate as createdate3_0_, blogentity0_.isTemp as isTemp3_0_, blogentity0_.readprivate as readpriv6_3_0_, blogentity0_.title as title3_0_, blogentity0_.USER_ID as USER8_3_0_ from BLOG_ENTITY blogentity0_ where blogentity0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogEntity [OPTIMISTIC]: select blogentity0_.id as id3_0_, blogentity0_.commentable as commenta2_3_0_, blogentity0_.content as content3_0_, blogentity0_.createdate as createdate3_0_, blogentity0_.isTemp as isTemp3_0_, blogentity0_.readprivate as readpriv6_3_0_, blogentity0_.title as title3_0_, blogentity0_.USER_ID as USER8_3_0_ from BLOG_ENTITY blogentity0_ where blogentity0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogEntity [OPTIMISTIC_FORCE_INCREMENT]: select blogentity0_.id as id3_0_, blogentity0_.commentable as commenta2_3_0_, blogentity0_.content as content3_0_, blogentity0_.createdate as createdate3_0_, blogentity0_.isTemp as isTemp3_0_, blogentity0_.readprivate as readpriv6_3_0_, blogentity0_.title as title3_0_, blogentity0_.USER_ID as USER8_3_0_ from BLOG_ENTITY blogentity0_ where blogentity0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity cn.com.kc.blog.pojo.BlogEntity: select blogentity0_.id as id3_0_, blogentity0_.commentable as commenta2_3_0_, blogentity0_.content as content3_0_, blogentity0_.createdate as createdate3_0_, blogentity0_.isTemp as isTemp3_0_, blogentity0_.readprivate as readpriv6_3_0_, blogentity0_.title as title3_0_, blogentity0_.USER_ID as USER8_3_0_ from BLOG_ENTITY blogentity0_ where blogentity0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity cn.com.kc.blog.pojo.BlogEntity: select blogentity0_.id as id3_0_, blogentity0_.commentable as commenta2_3_0_, blogentity0_.content as content3_0_, blogentity0_.createdate as createdate3_0_, blogentity0_.isTemp as isTemp3_0_, blogentity0_.readprivate as readpriv6_3_0_, blogentity0_.title as title3_0_, blogentity0_.USER_ID as USER8_3_0_ from BLOG_ENTITY blogentity0_ where blogentity0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogAuthorities [NONE]: select blogauthor0_.id as id0_0_, blogauthor0_.AUTHORITY as AUTHORITY0_0_, blogauthor0_.USER_ID as USER3_0_0_ from AUTHORITIES blogauthor0_ where blogauthor0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogAuthorities [READ]: select blogauthor0_.id as id0_0_, blogauthor0_.AUTHORITY as AUTHORITY0_0_, blogauthor0_.USER_ID as USER3_0_0_ from AUTHORITIES blogauthor0_ where blogauthor0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogAuthorities [UPGRADE]: select blogauthor0_.id as id0_0_, blogauthor0_.AUTHORITY as AUTHORITY0_0_, blogauthor0_.USER_ID as USER3_0_0_ from AUTHORITIES blogauthor0_ where blogauthor0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogAuthorities [UPGRADE_NOWAIT]: select blogauthor0_.id as id0_0_, blogauthor0_.AUTHORITY as AUTHORITY0_0_, blogauthor0_.USER_ID as USER3_0_0_ from AUTHORITIES blogauthor0_ where blogauthor0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogAuthorities [FORCE]: select blogauthor0_.id as id0_0_, blogauthor0_.AUTHORITY as AUTHORITY0_0_, blogauthor0_.USER_ID as USER3_0_0_ from AUTHORITIES blogauthor0_ where blogauthor0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogAuthorities [PESSIMISTIC_READ]: select blogauthor0_.id as id0_0_, blogauthor0_.AUTHORITY as AUTHORITY0_0_, blogauthor0_.USER_ID as USER3_0_0_ from AUTHORITIES blogauthor0_ where blogauthor0_.id=? lock in share mode
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogAuthorities [PESSIMISTIC_WRITE]: select blogauthor0_.id as id0_0_, blogauthor0_.AUTHORITY as AUTHORITY0_0_, blogauthor0_.USER_ID as USER3_0_0_ from AUTHORITIES blogauthor0_ where blogauthor0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogAuthorities [PESSIMISTIC_FORCE_INCREMENT]: select blogauthor0_.id as id0_0_, blogauthor0_.AUTHORITY as AUTHORITY0_0_, blogauthor0_.USER_ID as USER3_0_0_ from AUTHORITIES blogauthor0_ where blogauthor0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogAuthorities [OPTIMISTIC]: select blogauthor0_.id as id0_0_, blogauthor0_.AUTHORITY as AUTHORITY0_0_, blogauthor0_.USER_ID as USER3_0_0_ from AUTHORITIES blogauthor0_ where blogauthor0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogAuthorities [OPTIMISTIC_FORCE_INCREMENT]: select blogauthor0_.id as id0_0_, blogauthor0_.AUTHORITY as AUTHORITY0_0_, blogauthor0_.USER_ID as USER3_0_0_ from AUTHORITIES blogauthor0_ where blogauthor0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity cn.com.kc.blog.pojo.BlogAuthorities: select blogauthor0_.id as id0_0_, blogauthor0_.AUTHORITY as AUTHORITY0_0_, blogauthor0_.USER_ID as USER3_0_0_ from AUTHORITIES blogauthor0_ where blogauthor0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity cn.com.kc.blog.pojo.BlogAuthorities: select blogauthor0_.id as id0_1_, blogauthor0_.AUTHORITY as AUTHORITY0_1_, blogauthor0_.USER_ID as USER3_0_1_, bloguser1_.id as id5_0_, bloguser1_.address as address5_0_, bloguser1_.createTime as createTime5_0_, bloguser1_.email as email5_0_, bloguser1_.enabled as enabled5_0_, bloguser1_.password as password5_0_, bloguser1_.phoneNumber as phoneNum7_5_0_, bloguser1_.showName as showName5_0_, bloguser1_.USERNAME as USERNAME5_0_, bloguser1_.validateCode as validat10_5_0_ from AUTHORITIES blogauthor0_ inner join USERS bloguser1_ on blogauthor0_.USER_ID=bloguser1_.id where blogauthor0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogCategory [NONE]: select blogcatego0_.id as id1_0_, blogcatego0_.name as name1_0_, blogcatego0_.PARENT_ID as PARENT3_1_0_ from BLOG_CATEGORY blogcatego0_ where blogcatego0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogCategory [READ]: select blogcatego0_.id as id1_0_, blogcatego0_.name as name1_0_, blogcatego0_.PARENT_ID as PARENT3_1_0_ from BLOG_CATEGORY blogcatego0_ where blogcatego0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogCategory [UPGRADE]: select blogcatego0_.id as id1_0_, blogcatego0_.name as name1_0_, blogcatego0_.PARENT_ID as PARENT3_1_0_ from BLOG_CATEGORY blogcatego0_ where blogcatego0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogCategory [UPGRADE_NOWAIT]: select blogcatego0_.id as id1_0_, blogcatego0_.name as name1_0_, blogcatego0_.PARENT_ID as PARENT3_1_0_ from BLOG_CATEGORY blogcatego0_ where blogcatego0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogCategory [FORCE]: select blogcatego0_.id as id1_0_, blogcatego0_.name as name1_0_, blogcatego0_.PARENT_ID as PARENT3_1_0_ from BLOG_CATEGORY blogcatego0_ where blogcatego0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogCategory [PESSIMISTIC_READ]: select blogcatego0_.id as id1_0_, blogcatego0_.name as name1_0_, blogcatego0_.PARENT_ID as PARENT3_1_0_ from BLOG_CATEGORY blogcatego0_ where blogcatego0_.id=? lock in share mode
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogCategory [PESSIMISTIC_WRITE]: select blogcatego0_.id as id1_0_, blogcatego0_.name as name1_0_, blogcatego0_.PARENT_ID as PARENT3_1_0_ from BLOG_CATEGORY blogcatego0_ where blogcatego0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogCategory [PESSIMISTIC_FORCE_INCREMENT]: select blogcatego0_.id as id1_0_, blogcatego0_.name as name1_0_, blogcatego0_.PARENT_ID as PARENT3_1_0_ from BLOG_CATEGORY blogcatego0_ where blogcatego0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogCategory [OPTIMISTIC]: select blogcatego0_.id as id1_0_, blogcatego0_.name as name1_0_, blogcatego0_.PARENT_ID as PARENT3_1_0_ from BLOG_CATEGORY blogcatego0_ where blogcatego0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogCategory [OPTIMISTIC_FORCE_INCREMENT]: select blogcatego0_.id as id1_0_, blogcatego0_.name as name1_0_, blogcatego0_.PARENT_ID as PARENT3_1_0_ from BLOG_CATEGORY blogcatego0_ where blogcatego0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity cn.com.kc.blog.pojo.BlogCategory: select blogcatego0_.id as id1_0_, blogcatego0_.name as name1_0_, blogcatego0_.PARENT_ID as PARENT3_1_0_ from BLOG_CATEGORY blogcatego0_ where blogcatego0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity cn.com.kc.blog.pojo.BlogCategory: select blogcatego0_.id as id1_0_, blogcatego0_.name as name1_0_, blogcatego0_.PARENT_ID as PARENT3_1_0_ from BLOG_CATEGORY blogcatego0_ where blogcatego0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogComments [NONE]: select blogcommen0_.id as id2_0_, blogcommen0_.commenttime as commentt2_2_0_, blogcommen0_.content as content2_0_, blogcommen0_.ENTITY_ID as ENTITY4_2_0_, blogcommen0_.USER_ID as USER5_2_0_ from BLOG_COMMENT blogcommen0_ where blogcommen0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogComments [READ]: select blogcommen0_.id as id2_0_, blogcommen0_.commenttime as commentt2_2_0_, blogcommen0_.content as content2_0_, blogcommen0_.ENTITY_ID as ENTITY4_2_0_, blogcommen0_.USER_ID as USER5_2_0_ from BLOG_COMMENT blogcommen0_ where blogcommen0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogComments [UPGRADE]: select blogcommen0_.id as id2_0_, blogcommen0_.commenttime as commentt2_2_0_, blogcommen0_.content as content2_0_, blogcommen0_.ENTITY_ID as ENTITY4_2_0_, blogcommen0_.USER_ID as USER5_2_0_ from BLOG_COMMENT blogcommen0_ where blogcommen0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogComments [UPGRADE_NOWAIT]: select blogcommen0_.id as id2_0_, blogcommen0_.commenttime as commentt2_2_0_, blogcommen0_.content as content2_0_, blogcommen0_.ENTITY_ID as ENTITY4_2_0_, blogcommen0_.USER_ID as USER5_2_0_ from BLOG_COMMENT blogcommen0_ where blogcommen0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogComments [FORCE]: select blogcommen0_.id as id2_0_, blogcommen0_.commenttime as commentt2_2_0_, blogcommen0_.content as content2_0_, blogcommen0_.ENTITY_ID as ENTITY4_2_0_, blogcommen0_.USER_ID as USER5_2_0_ from BLOG_COMMENT blogcommen0_ where blogcommen0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogComments [PESSIMISTIC_READ]: select blogcommen0_.id as id2_0_, blogcommen0_.commenttime as commentt2_2_0_, blogcommen0_.content as content2_0_, blogcommen0_.ENTITY_ID as ENTITY4_2_0_, blogcommen0_.USER_ID as USER5_2_0_ from BLOG_COMMENT blogcommen0_ where blogcommen0_.id=? lock in share mode
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogComments [PESSIMISTIC_WRITE]: select blogcommen0_.id as id2_0_, blogcommen0_.commenttime as commentt2_2_0_, blogcommen0_.content as content2_0_, blogcommen0_.ENTITY_ID as ENTITY4_2_0_, blogcommen0_.USER_ID as USER5_2_0_ from BLOG_COMMENT blogcommen0_ where blogcommen0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogComments [PESSIMISTIC_FORCE_INCREMENT]: select blogcommen0_.id as id2_0_, blogcommen0_.commenttime as commentt2_2_0_, blogcommen0_.content as content2_0_, blogcommen0_.ENTITY_ID as ENTITY4_2_0_, blogcommen0_.USER_ID as USER5_2_0_ from BLOG_COMMENT blogcommen0_ where blogcommen0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogComments [OPTIMISTIC]: select blogcommen0_.id as id2_0_, blogcommen0_.commenttime as commentt2_2_0_, blogcommen0_.content as content2_0_, blogcommen0_.ENTITY_ID as ENTITY4_2_0_, blogcommen0_.USER_ID as USER5_2_0_ from BLOG_COMMENT blogcommen0_ where blogcommen0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity cn.com.kc.blog.pojo.BlogComments [OPTIMISTIC_FORCE_INCREMENT]: select blogcommen0_.id as id2_0_, blogcommen0_.commenttime as commentt2_2_0_, blogcommen0_.content as content2_0_, blogcommen0_.ENTITY_ID as ENTITY4_2_0_, blogcommen0_.USER_ID as USER5_2_0_ from BLOG_COMMENT blogcommen0_ where blogcommen0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity cn.com.kc.blog.pojo.BlogComments: select blogcommen0_.id as id2_0_, blogcommen0_.commenttime as commentt2_2_0_, blogcommen0_.content as content2_0_, blogcommen0_.ENTITY_ID as ENTITY4_2_0_, blogcommen0_.USER_ID as USER5_2_0_ from BLOG_COMMENT blogcommen0_ where blogcommen0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity cn.com.kc.blog.pojo.BlogComments: select blogcommen0_.id as id2_0_, blogcommen0_.commenttime as commentt2_2_0_, blogcommen0_.content as content2_0_, blogcommen0_.ENTITY_ID as ENTITY4_2_0_, blogcommen0_.USER_ID as USER5_2_0_ from BLOG_COMMENT blogcommen0_ where blogcommen0_.id=?
DEBUG main org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many cn.com.kc.blog.pojo.BlogEntity.images: select images0_.ENTITY_ID as ENTITY4_3_1_, images0_.id as id1_, images0_.id as id4_0_, images0_.ENTITY_ID as ENTITY4_4_0_, images0_.name as name4_0_, images0_.position as position4_0_ from BLOG_IMAGE images0_ where images0_.ENTITY_ID=?
DEBUG main org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many cn.com.kc.blog.pojo.BlogEntity.comments: select comments0_.ENTITY_ID as ENTITY4_3_1_, comments0_.id as id1_, comments0_.id as id2_0_, comments0_.commenttime as commentt2_2_0_, comments0_.content as content2_0_, comments0_.ENTITY_ID as ENTITY4_2_0_, comments0_.USER_ID as USER5_2_0_ from BLOG_COMMENT comments0_ where comments0_.ENTITY_ID=?
DEBUG main org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many cn.com.kc.blog.pojo.BlogUser.comments: select comments0_.USER_ID as USER5_5_1_, comments0_.id as id1_, comments0_.id as id2_0_, comments0_.commenttime as commentt2_2_0_, comments0_.content as content2_0_, comments0_.ENTITY_ID as ENTITY4_2_0_, comments0_.USER_ID as USER5_2_0_ from BLOG_COMMENT comments0_ where comments0_.USER_ID=?
DEBUG main org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many cn.com.kc.blog.pojo.BlogUser.entities: select entities0_.USER_ID as USER8_5_1_, entities0_.id as id1_, entities0_.id as id3_0_, entities0_.commentable as commenta2_3_0_, entities0_.content as content3_0_, entities0_.createdate as createdate3_0_, entities0_.isTemp as isTemp3_0_, entities0_.readprivate as readpriv6_3_0_, entities0_.title as title3_0_, entities0_.USER_ID as USER8_3_0_ from BLOG_ENTITY entities0_ where entities0_.USER_ID=?
DEBUG main org.hibernate.loader.collection.BasicCollectionLoader - Static select for collection cn.com.kc.blog.pojo.BlogEntity.categorys: select categorys0_.CATE_ID as CATE2_3_1_, categorys0_.ENTITY_ID as ENTITY1_1_, blogcatego1_.id as id1_0_, blogcatego1_.name as name1_0_, blogcatego1_.PARENT_ID as PARENT3_1_0_ from BLOG_ENTITY_CATE categorys0_ inner join BLOG_CATEGORY blogcatego1_ on categorys0_.ENTITY_ID=blogcatego1_.id where categorys0_.CATE_ID=?
DEBUG main org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many cn.com.kc.blog.pojo.BlogCategory.children: select children0_.PARENT_ID as PARENT3_1_1_, children0_.id as id1_, children0_.id as id1_0_, children0_.name as name1_0_, children0_.PARENT_ID as PARENT3_1_0_ from BLOG_CATEGORY children0_ where children0_.PARENT_ID=?
DEBUG main org.hibernate.loader.collection.BasicCollectionLoader - Static select for collection cn.com.kc.blog.pojo.BlogCategory.entities: select entities0_.ENTITY_ID as ENTITY1_1_1_, entities0_.CATE_ID as CATE2_1_, blogentity1_.id as id3_0_, blogentity1_.commentable as commenta2_3_0_, blogentity1_.content as content3_0_, blogentity1_.createdate as createdate3_0_, blogentity1_.isTemp as isTemp3_0_, blogentity1_.readprivate as readpriv6_3_0_, blogentity1_.title as title3_0_, blogentity1_.USER_ID as USER8_3_0_ from BLOG_ENTITY_CATE entities0_ inner join BLOG_ENTITY blogentity1_ on entities0_.CATE_ID=blogentity1_.id where entities0_.ENTITY_ID=?
DEBUG main org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many cn.com.kc.blog.pojo.BlogUser.authorities: select authoritie0_.USER_ID as USER3_5_1_, authoritie0_.id as id1_, authoritie0_.id as id0_0_, authoritie0_.AUTHORITY as AUTHORITY0_0_, authoritie0_.USER_ID as USER3_0_0_ from AUTHORITIES authoritie0_ where authoritie0_.USER_ID=?
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@44cae5b8
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: cf164c99-a1e2-4815-9ecd-66be925128e2 (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
INFO main org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
INFO main org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
INFO main org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.cfg.Configuration - Resolving reference to class: cn.com.kc.blog.pojo.BlogUser
DEBUG main org.hibernate.cfg.Configuration - Resolving reference to class: cn.com.kc.blog.pojo.BlogCategory
DEBUG main org.hibernate.cfg.Configuration - Resolving reference to class: cn.com.kc.blog.pojo.BlogEntity
DEBUG main org.hibernate.cfg.Configuration - Resolving reference to class: cn.com.kc.blog.pojo.BlogUser
DEBUG main org.hibernate.cfg.Configuration - Resolving reference to class: cn.com.kc.blog.pojo.BlogUser
DEBUG main org.hibernate.cfg.Configuration - Resolving reference to class: cn.com.kc.blog.pojo.BlogCategory
DEBUG main org.hibernate.cfg.Configuration - Resolving reference to class: cn.com.kc.blog.pojo.BlogEntity
DEBUG main org.hibernate.cfg.Configuration - Resolving reference to class: cn.com.kc.blog.pojo.BlogEntity
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: AUTHORITIES
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: BLOG_CATEGORY
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: BLOG_COMMENT
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: BLOG_ENTITY
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: BLOG_ENTITY_CATE
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: BLOG_IMAGE
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: USERS
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: AUTHORITIES
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: BLOG_CATEGORY
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: BLOG_COMMENT
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: BLOG_ENTITY
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: BLOG_ENTITY_CATE
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: BLOG_IMAGE
INFO main java.sql.DatabaseMetaData - HHH000262: Table not found: USERS
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - create table AUTHORITIES (id bigint not null auto_increment, AUTHORITY varchar(255), USER_ID bigint not null, primary key (id))
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - create table BLOG_CATEGORY (id bigint not null auto_increment, name varchar(255), PARENT_ID bigint, primary key (id))
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - create table BLOG_COMMENT (id bigint not null auto_increment, commenttime datetime, content varchar(255), ENTITY_ID bigint not null, USER_ID bigint not null, primary key (id))
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - create table BLOG_ENTITY (id bigint not null auto_increment, commentable boolean, content BLOB, createdate datetime, isTemp boolean, readprivate varchar(255), title varchar(255), USER_ID bigint not null, primary key (id))
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - create table BLOG_ENTITY_CATE (ENTITY_ID bigint not null, CATE_ID bigint not null)
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - create table BLOG_IMAGE (id bigint not null auto_increment, name varchar(255), position varchar(255), ENTITY_ID bigint, primary key (id))
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - create table USERS (id bigint not null auto_increment, address varchar(255), createTime datetime, email varchar(255), enabled boolean, password varchar(255), phoneNumber varchar(255), showName varchar(255), USERNAME varchar(255) unique, validateCode varchar(255), primary key (id), unique (USERNAME))
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table AUTHORITIES add index FKAB62A7019614CA80 (USER_ID), add constraint FKAB62A7019614CA80 foreign key (USER_ID) references USERS (id)
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - create index USER_ID on AUTHORITIES (USER_ID)
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table BLOG_CATEGORY add index FKB0842CFB3B379B74 (PARENT_ID), add constraint FKB0842CFB3B379B74 foreign key (PARENT_ID) references BLOG_CATEGORY (id)
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table BLOG_COMMENT add index FKA15786A28232200 (ENTITY_ID), add constraint FKA15786A28232200 foreign key (ENTITY_ID) references BLOG_ENTITY (id)
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table BLOG_COMMENT add index FKA15786A29614CA80 (USER_ID), add constraint FKA15786A29614CA80 foreign key (USER_ID) references USERS (id)
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table BLOG_ENTITY add index FK94F633209614CA80 (USER_ID), add constraint FK94F633209614CA80 foreign key (USER_ID) references USERS (id)
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table BLOG_ENTITY_CATE add index FK57E6ED0E93ACC99B (ENTITY_ID), add constraint FK57E6ED0E93ACC99B foreign key (ENTITY_ID) references BLOG_CATEGORY (id)
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table BLOG_ENTITY_CATE add index FK57E6ED0E55684314 (CATE_ID), add constraint FK57E6ED0E55684314 foreign key (CATE_ID) references BLOG_ENTITY (id)
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table BLOG_IMAGE add index FK5FDC7A5E8232200 (ENTITY_ID), add constraint FK5FDC7A5E8232200 foreign key (ENTITY_ID) references BLOG_ENTITY (id)
INFO main org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
DEBUG main org.hibernate.internal.SessionFactoryImpl - Checking 0 named HQL queries
DEBUG main org.hibernate.internal.SessionFactoryImpl - Checking 0 named SQL queries
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'localSessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'cn.com.kc.blog.dao.service.IBlogUserDaoService'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'cn.com.kc.blog.bl.service.IBlogEntityService': ResourceElement for public void cn.com.kc.blog.bl.service.impl.BlogEntityServiceImpl.setEntityDao(cn.com.kc.blog.dao.service.IBlogEntityDaoService)
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cn.com.kc.blog.dao.service.IBlogEntityDaoService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'cn.com.kc.blog.dao.service.IBlogEntityDaoService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Found injected element on class [cn.com.kc.blog.dao.service.impl.BlogEntityDaoImpl]: ResourceElement for private org.hibernate.SessionFactory cn.com.kc.blog.commondao.service.impl.BaseDaoImpl.sessionFactory
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Found injected element on class [cn.com.kc.blog.dao.service.impl.BlogEntityDaoImpl]: ResourceElement for public void cn.com.kc.blog.dao.service.impl.BlogEntityDaoImpl.setUserDao(cn.com.kc.blog.dao.service.IBlogUserDaoService)
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'cn.com.kc.blog.dao.service.IBlogEntityDaoService' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'cn.com.kc.blog.dao.service.IBlogEntityDaoService': ResourceElement for private org.hibernate.SessionFactory cn.com.kc.blog.commondao.service.impl.BaseDaoImpl.sessionFactory
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'localSessionFactory'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'cn.com.kc.blog.dao.service.IBlogEntityDaoService': ResourceElement for public void cn.com.kc.blog.dao.service.impl.BlogEntityDaoImpl.setUserDao(cn.com.kc.blog.dao.service.IBlogUserDaoService)
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.dao.service.IBlogUserDaoService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'cn.com.kc.blog.dao.service.IBlogEntityDaoService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'txAdvice'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'txAdvice'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'txAdvice' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'hibTransactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'hibTransactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'hibTransactionManager' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'localSessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'hibTransactionManager'
INFO main org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.apache.commons.dbcp.BasicDataSource@4e64f6fe] of Hibernate SessionFactory for HibernateTransactionManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'hibTransactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean '(inner bean)'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource - Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly]
DEBUG main org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource - Adding transactional method [save*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG main org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource - Adding transactional method [del*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG main org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'txAdvice'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'txAdvice'
DEBUG main org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator - Creating implicit proxy for bean 'cn.com.kc.blog.bl.service.IBlogEntityService' with 0 common interceptors and 2 specific interceptors
DEBUG main org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [cn.com.kc.blog.bl.service.impl.BlogEntityServiceImpl@1d286180]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'cn.com.kc.blog.bl.service.IBlogEntityService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cn.com.kc.blog.bl.service.IBlogImageService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'cn.com.kc.blog.bl.service.IBlogImageService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Found injected element on class [cn.com.kc.blog.bl.service.impl.BlogImageServiceImpl]: ResourceElement for private cn.com.kc.blog.dao.service.IBlogImageDaoService cn.com.kc.blog.bl.service.impl.BlogImageServiceImpl.dao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'cn.com.kc.blog.bl.service.IBlogImageService' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'cn.com.kc.blog.bl.service.IBlogImageService': ResourceElement for private cn.com.kc.blog.dao.service.IBlogImageDaoService cn.com.kc.blog.bl.service.impl.BlogImageServiceImpl.dao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cn.com.kc.blog.dao.service.IBlogImageDaoService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'cn.com.kc.blog.dao.service.IBlogImageDaoService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Found injected element on class [cn.com.kc.blog.dao.service.impl.BlogImageDaoImpl]: ResourceElement for private org.hibernate.SessionFactory cn.com.kc.blog.commondao.service.impl.BaseDaoImpl.sessionFactory
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'cn.com.kc.blog.dao.service.IBlogImageDaoService' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'cn.com.kc.blog.dao.service.IBlogImageDaoService': ResourceElement for private org.hibernate.SessionFactory cn.com.kc.blog.commondao.service.impl.BaseDaoImpl.sessionFactory
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'localSessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'cn.com.kc.blog.dao.service.IBlogImageDaoService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator - Creating implicit proxy for bean 'cn.com.kc.blog.bl.service.IBlogImageService' with 0 common interceptors and 2 specific interceptors
DEBUG main org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [cn.com.kc.blog.bl.service.impl.BlogImageServiceImpl@77ec3adc]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'cn.com.kc.blog.bl.service.IBlogImageService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cn.com.kc.blog.bl.service.impl.BlogUserAuthenticateDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'cn.com.kc.blog.bl.service.impl.BlogUserAuthenticateDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'cn.com.kc.blog.bl.service.impl.BlogUserAuthenticateDaoImpl' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'cn.com.kc.blog.bl.service.impl.BlogUserAuthenticateDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cn.com.kc.blog.bl.service.IBlogUserService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'cn.com.kc.blog.bl.service.IBlogUserService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Found injected element on class [cn.com.kc.blog.bl.service.impl.BlogUserServiceImpl]: ResourceElement for public void cn.com.kc.blog.bl.service.impl.BlogUserServiceImpl.setUserDao(cn.com.kc.blog.dao.service.IBlogUserDaoService)
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'cn.com.kc.blog.bl.service.IBlogUserService' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'cn.com.kc.blog.bl.service.IBlogUserService': ResourceElement for public void cn.com.kc.blog.bl.service.impl.BlogUserServiceImpl.setUserDao(cn.com.kc.blog.dao.service.IBlogUserDaoService)
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.dao.service.IBlogUserDaoService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator - Creating implicit proxy for bean 'cn.com.kc.blog.bl.service.IBlogUserService' with 0 common interceptors and 2 specific interceptors
DEBUG main org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [cn.com.kc.blog.bl.service.impl.BlogUserServiceImpl@28154ec5]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'cn.com.kc.blog.bl.service.IBlogUserService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cn.com.kc.blog.common.util.BlogMessageSourceHelper'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'cn.com.kc.blog.common.util.BlogMessageSourceHelper'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Found injected element on class [cn.com.kc.blog.common.util.BlogMessageSourceHelper]: ResourceElement for private org.springframework.context.MessageSource cn.com.kc.blog.common.util.BlogMessageSourceHelper.messageSource
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'cn.com.kc.blog.common.util.BlogMessageSourceHelper' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'cn.com.kc.blog.common.util.BlogMessageSourceHelper': ResourceElement for private org.springframework.context.MessageSource cn.com.kc.blog.common.util.BlogMessageSourceHelper.messageSource
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'messageSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'cn.com.kc.blog.common.util.BlogMessageSourceHelper'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cn.com.kc.blog.commondao.service.IBaseDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'cn.com.kc.blog.commondao.service.IBaseDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Found injected element on class [cn.com.kc.blog.commondao.service.impl.BaseDaoImpl]: ResourceElement for private org.hibernate.SessionFactory cn.com.kc.blog.commondao.service.impl.BaseDaoImpl.sessionFactory
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'cn.com.kc.blog.commondao.service.IBaseDao' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'cn.com.kc.blog.commondao.service.IBaseDao': ResourceElement for private org.hibernate.SessionFactory cn.com.kc.blog.commondao.service.impl.BaseDaoImpl.sessionFactory
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'localSessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'cn.com.kc.blog.commondao.service.IBaseDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.dao.service.IBlogEntityDaoService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.dao.service.IBlogImageDaoService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.dao.service.IBlogUserDaoService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cn.com.kc.blog.userdetialservice.impl.UserDetailServiceHibernateImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'cn.com.kc.blog.userdetialservice.impl.UserDetailServiceHibernateImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Found injected element on class [cn.com.kc.blog.userdetialservice.impl.UserDetailServiceHibernateImpl]: ResourceElement for protected cn.com.kc.blog.common.util.BlogMessageSourceHelper cn.com.kc.blog.userdetialservice.impl.UserDetailServiceHibernateImpl.blogMessageSourceHelper
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Found injected element on class [cn.com.kc.blog.userdetialservice.impl.UserDetailServiceHibernateImpl]: ResourceElement for public void cn.com.kc.blog.userdetialservice.impl.UserDetailServiceHibernateImpl.setUserService(cn.com.kc.blog.bl.service.IBlogUserService)
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'cn.com.kc.blog.userdetialservice.impl.UserDetailServiceHibernateImpl' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'cn.com.kc.blog.userdetialservice.impl.UserDetailServiceHibernateImpl': ResourceElement for protected cn.com.kc.blog.common.util.BlogMessageSourceHelper cn.com.kc.blog.userdetialservice.impl.UserDetailServiceHibernateImpl.blogMessageSourceHelper
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.common.util.BlogMessageSourceHelper'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'cn.com.kc.blog.userdetialservice.impl.UserDetailServiceHibernateImpl': ResourceElement for public void cn.com.kc.blog.userdetialservice.impl.UserDetailServiceHibernateImpl.setUserService(cn.com.kc.blog.bl.service.IBlogUserService)
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.bl.service.IBlogUserService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'cn.com.kc.blog.userdetialservice.impl.UserDetailServiceHibernateImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cn.com.kc.blog.vo.BlogUserConverter'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'cn.com.kc.blog.vo.BlogUserConverter'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'cn.com.kc.blog.vo.BlogUserConverter' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'cn.com.kc.blog.vo.BlogUserConverter'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txAdvice'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'localSessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'hibTransactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'propertyConfigurer'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'messageSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeResolver'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'localeResolver'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'localeResolver' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'localeResolver'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jcaptchaService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'jcaptchaService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
INFO main com.octo.captcha.service.image.DefaultManageableImageCaptchaService - Init com.octo.captcha.service.captchastore.FastHashMapCaptchaStore
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'jcaptchaService' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'cn.com.kc.blog.userauthenfilter.impl.GMailEngine#2945c761'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'cn.com.kc.blog.userauthenfilter.impl.GMailEngine#2945c761'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'jcaptchaService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcTxManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'jdbcTxManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'jdbcTxManager' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'jdbcTxManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'jdbcTxManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping#0' to allow for resolving potential circular references
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Looking for URL mappings in application context: org.springframework.context.support.ClassPathXmlApplicationContext@f855562: startup date [Thu Aug 15 23:29:10 HKT 2013]; root of context hierarchy
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'cn.com.kc.blog.bl.service.IBlogEntityService': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'cn.com.kc.blog.bl.service.IBlogImageService': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'cn.com.kc.blog.bl.service.impl.BlogUserAuthenticateDaoImpl': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'cn.com.kc.blog.bl.service.IBlogUserService': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'cn.com.kc.blog.common.util.BlogMessageSourceHelper': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'cn.com.kc.blog.commondao.service.IBaseDao': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'cn.com.kc.blog.dao.service.IBlogEntityDaoService': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'cn.com.kc.blog.dao.service.IBlogImageDaoService': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'cn.com.kc.blog.dao.service.IBlogUserDaoService': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'cn.com.kc.blog.userdetialservice.impl.UserDetailServiceHibernateImpl': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'cn.com.kc.blog.vo.BlogUserConverter': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'dataSource': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'txAdvice': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'blogServicePointCut': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'localSessionFactory': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'hibTransactionManager': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'propertyConfigurer': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'messageSource': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'localeResolver': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'jcaptchaService': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'jdbcTxManager': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping#0': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'hibernateBeanValidator': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'conversion-service': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter#0': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'byteArray_hmc': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'string_hmc': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'resource_hmc': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'source_hmc': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'xmlAwareForm_hmc': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'jaxb2RootElement_hmc': no URL paths identified
DEBUG main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Rejected bean name 'jackson_hmc': no URL paths identified
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Found injected element on class [cn.com.kc.blog.controller.service.impl.BlogEntityController]: ResourceElement for private cn.com.kc.blog.bl.service.IBlogEntityService cn.com.kc.blog.controller.service.impl.BlogEntityController.blogEntityService
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Found injected element on class [cn.com.kc.blog.controller.service.impl.BlogEntityController]: ResourceElement for private cn.com.kc.blog.bl.service.IBlogImageService cn.com.kc.blog.controller.service.impl.BlogEntityController.blogImageDaoService
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Found injected element on class [cn.com.kc.blog.controller.service.impl.BlogEntityController]: ResourceElement for public void cn.com.kc.blog.controller.service.impl.BlogEntityController.setUserService(cn.com.kc.blog.bl.service.IBlogEntityService)
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController': ResourceElement for private cn.com.kc.blog.bl.service.IBlogEntityService cn.com.kc.blog.controller.service.impl.BlogEntityController.blogEntityService
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.bl.service.IBlogEntityService'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController': ResourceElement for private cn.com.kc.blog.bl.service.IBlogImageService cn.com.kc.blog.controller.service.impl.BlogEntityController.blogImageDaoService
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.bl.service.IBlogImageService'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController': ResourceElement for public void cn.com.kc.blog.controller.service.impl.BlogEntityController.setUserService(cn.com.kc.blog.bl.service.IBlogEntityService)
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.bl.service.IBlogEntityService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/create] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/create.*] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/create/] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/saveentity] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/saveentity.*] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/saveentity/] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/saveimage] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/saveimage.*] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/saveimage/] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/endit/{entityId}] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/endit/{entityId}.*] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/endit/{entityId}/] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/savefile] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/savefile.*] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/savefile/] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/inituploadinfo] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/inituploadinfo.*] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/inituploadinfo/] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/delentity] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/delentity.*] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/delentity/] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
INFO main org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/entity/editepreviewcontent] onto handler 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
