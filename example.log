DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#4'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#5'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#5'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#5' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#4'
INFO main org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/assets/ico/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#4'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#5'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.web.servlet.view.BeanNameViewResolver#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.web.servlet.view.BeanNameViewResolver#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.web.servlet.view.BeanNameViewResolver#0' to allow for resolving potential circular references
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.web.servlet.view.BeanNameViewResolver#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.web.servlet.view.ContentNegotiatingViewResolver#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.web.servlet.view.ContentNegotiatingViewResolver#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.web.servlet.view.ContentNegotiatingViewResolver#0' to allow for resolving potential circular references
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#6571120a'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#6571120a'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.web.servlet.view.ContentNegotiatingViewResolver#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultJsonView'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'defaultJsonView'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'defaultJsonView' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'defaultJsonView'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'exceptionResolver'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'exceptionResolver'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'exceptionResolver' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'exceptionResolver'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
DEBUG main org.springframework.context.support.ClassPathXmlApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@3dd6e4a4]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jdbcTxManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.bl.service.IBlogEntityService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogEntityController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.controller.service.impl.BlogUserController'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.bl.service.IBlogUserService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cn.com.kc.blog.bl.service.IBlogEntityService'
DEBUG main org.springframework.orm.hibernate4.HibernateTransactionManager - Creating new transaction with name [cn.com.kc.blog.bl.service.impl.BlogEntityServiceImpl.getTempEntity]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG main org.hibernate.internal.SessionImpl - Opened session at timestamp: 13850468528
DEBUG main org.springframework.orm.hibernate4.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate4.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
DEBUG main org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@1aa0e220[valid=true]] read-only
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
DEBUG main org.springframework.orm.hibernate4.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@1aa0e220[valid=true]]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select entity.id,entity.title,entity.content,entity.createdate, entity.readprivate,entity.commentable,image.id,image.name,image.description,image.position  from cn.com.kc.blog.pojo.BlogEntity entity inner join entity.images as image  where entity.isTemp = true and entity.user = ?
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'com'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'kc'
    |  |  |  |  |  |  \-[IDENT] Node: 'blog'
    |  |  |  |  |  \-[IDENT] Node: 'pojo'
    |  |  |  |  \-[IDENT] Node: 'BlogEntity'
    |  |  |  \-[ALIAS] Node: 'entity'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'images'
    |  |     \-[ALIAS] Node: 'image'
    |  \-[SELECT] Node: 'select'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'id'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'title'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'content'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'createdate'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'readprivate'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'commentable'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'image'
    |     |  \-[IDENT] Node: 'id'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'image'
    |     |  \-[IDENT] Node: 'name'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'image'
    |     |  \-[IDENT] Node: 'description'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'image'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'entity'
          |  |  \-[IDENT] Node: 'isTemp'
          |  \-[TRUE] Node: 'true'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'entity'
             |  \-[IDENT] Node: 'user'
             \-[PARAM] Node: '?'

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : cn.com.kc.blog.pojo.BlogEntity (entity) -> blogentity0_
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity -> blogentity0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : images -> org.hibernate.type.BagType(cn.com.kc.blog.pojo.BlogEntity.images)
DEBUG main org.hibernate.hql.internal.ast.tree.FromElementFactory - createEntityAssociation() : One to many - path = entity.images role = cn.com.kc.blog.pojo.BlogEntity.images associatedEntityName = cn.com.kc.blog.pojo.BlogImage
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : cn.com.kc.blog.pojo.BlogImage (image) -> images1_
DEBUG main org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : entity.images -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=image,role=null,tableName=BLOG_IMAGE,tableAlias=images1_,origin=BLOG_ENTITY blogentity0_,columns={blogentity0_.id ,className=cn.com.kc.blog.pojo.BlogImage}}
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for entity.images : BLOG_IMAGE images1_
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity.images -> .
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'BLOG_IMAGE images1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=image,role=cn.com.kc.blog.pojo.BlogEntity.images,tableName=BLOG_IMAGE,tableAlias=images1_,origin=BLOG_ENTITY blogentity0_,columns={blogentity0_.id ,className=cn.com.kc.blog.pojo.BlogImage}}

DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity -> blogentity0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.LongType@10738dcb
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity.id -> blogentity0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity -> blogentity0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : title -> org.hibernate.type.StringType@46c80e21
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity.title -> blogentity0_.title
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity -> blogentity0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : content -> org.hibernate.type.StringType@46c80e21
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity.content -> blogentity0_.content
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity -> blogentity0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : createdate -> org.hibernate.type.TimestampType@3c2250d5
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity.createdate -> blogentity0_.createdate
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity -> blogentity0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : readprivate -> org.hibernate.type.StringType@46c80e21
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity.readprivate -> blogentity0_.readprivate
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity -> blogentity0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : commentable -> org.hibernate.type.BooleanType@1bdb52c8
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity.commentable -> blogentity0_.commentable
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : image -> images1_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.LongType@10738dcb
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : image.id -> images1_.id
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : image -> images1_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : name -> org.hibernate.type.StringType@46c80e21
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : image.name -> images1_.name
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : image -> images1_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : description -> org.hibernate.type.StringType@46c80e21
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : image.description -> images1_.description
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : image -> images1_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : position -> org.hibernate.type.StringType@46c80e21
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : image.position -> images1_.position
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity -> blogentity0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : isTemp -> org.hibernate.type.BooleanType@1bdb52c8
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity.isTemp -> blogentity0_.isTemp
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity -> blogentity0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(cn.com.kc.blog.pojo.BlogUser)
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - dereferenceShortcut() : property user in cn.com.kc.blog.pojo.BlogEntity does not require a join.
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - Terminal propertyPath = [user]
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : entity.user -> blogentity0_.USER_ID
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( blogentity0_.id blogentity0_.id id ) ( blogentity0_.title blogentity0_.id title ) ( blogentity0_.content blogentity0_.id content ) ( blogentity0_.createdate blogentity0_.id createdate ) ( blogentity0_.readprivate blogentity0_.id readprivate ) ( blogentity0_.commentable blogentity0_.id commentable ) ( images1_.id images1_.id id ) ( images1_.name images1_.id name ) ( images1_.description images1_.id description ) ( images1_.position images1_.id position ) ) ( FromClause{level=1} ( BLOG_ENTITY blogentity0_ BLOG_IMAGE images1_ ) ) ( where ( and ( = ( blogentity0_.isTemp blogentity0_.id isTemp ) 1 ) ( = ( blogentity0_.USER_ID blogentity0_.id user ) ? ) ) ) )
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [BLOG_ENTITY blogentity0_]
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [inner join BLOG_IMAGE images1_ on blogentity0_.id=images1_.ENTITY_ID]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (BLOG_IMAGE,BLOG_ENTITY)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'blogentity0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=entity.id,tableAlias=blogentity0_,className=cn.com.kc.blog.pojo.BlogEntity,classAlias=entity}
    |  |  +-[ALIAS_REF] IdentNode: 'blogentity0_.id' {alias=entity, className=cn.com.kc.blog.pojo.BlogEntity, tableAlias=blogentity0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'blogentity0_.title' {propertyName=title,dereferenceType=ALL,propertyPath=title,path=entity.title,tableAlias=blogentity0_,className=cn.com.kc.blog.pojo.BlogEntity,classAlias=entity}
    |  |  +-[ALIAS_REF] IdentNode: 'blogentity0_.id' {alias=entity, className=cn.com.kc.blog.pojo.BlogEntity, tableAlias=blogentity0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[DOT] DotNode: 'blogentity0_.content' {propertyName=content,dereferenceType=ALL,propertyPath=content,path=entity.content,tableAlias=blogentity0_,className=cn.com.kc.blog.pojo.BlogEntity,classAlias=entity}
    |  |  +-[ALIAS_REF] IdentNode: 'blogentity0_.id' {alias=entity, className=cn.com.kc.blog.pojo.BlogEntity, tableAlias=blogentity0_}
    |  |  \-[IDENT] IdentNode: 'content' {originalText=content}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    |  +-[DOT] DotNode: 'blogentity0_.createdate' {propertyName=createdate,dereferenceType=ALL,propertyPath=createdate,path=entity.createdate,tableAlias=blogentity0_,className=cn.com.kc.blog.pojo.BlogEntity,classAlias=entity}
    |  |  +-[ALIAS_REF] IdentNode: 'blogentity0_.id' {alias=entity, className=cn.com.kc.blog.pojo.BlogEntity, tableAlias=blogentity0_}
    |  |  \-[IDENT] IdentNode: 'createdate' {originalText=createdate}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_3_0_'
    |  +-[DOT] DotNode: 'blogentity0_.readprivate' {propertyName=readprivate,dereferenceType=ALL,propertyPath=readprivate,path=entity.readprivate,tableAlias=blogentity0_,className=cn.com.kc.blog.pojo.BlogEntity,classAlias=entity}
    |  |  +-[ALIAS_REF] IdentNode: 'blogentity0_.id' {alias=entity, className=cn.com.kc.blog.pojo.BlogEntity, tableAlias=blogentity0_}
    |  |  \-[IDENT] IdentNode: 'readprivate' {originalText=readprivate}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_4_0_'
    |  +-[DOT] DotNode: 'blogentity0_.commentable' {propertyName=commentable,dereferenceType=ALL,propertyPath=commentable,path=entity.commentable,tableAlias=blogentity0_,className=cn.com.kc.blog.pojo.BlogEntity,classAlias=entity}
    |  |  +-[ALIAS_REF] IdentNode: 'blogentity0_.id' {alias=entity, className=cn.com.kc.blog.pojo.BlogEntity, tableAlias=blogentity0_}
    |  |  \-[IDENT] IdentNode: 'commentable' {originalText=commentable}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_5_0_'
    |  +-[DOT] DotNode: 'images1_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=image.id,tableAlias=images1_,className=cn.com.kc.blog.pojo.BlogImage,classAlias=image}
    |  |  +-[ALIAS_REF] IdentNode: 'images1_.id' {alias=image, className=cn.com.kc.blog.pojo.BlogImage, tableAlias=images1_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_6_0_'
    |  +-[DOT] DotNode: 'images1_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=image.name,tableAlias=images1_,className=cn.com.kc.blog.pojo.BlogImage,classAlias=image}
    |  |  +-[ALIAS_REF] IdentNode: 'images1_.id' {alias=image, className=cn.com.kc.blog.pojo.BlogImage, tableAlias=images1_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_7_0_'
    |  +-[DOT] DotNode: 'images1_.description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path=image.description,tableAlias=images1_,className=cn.com.kc.blog.pojo.BlogImage,classAlias=image}
    |  |  +-[ALIAS_REF] IdentNode: 'images1_.id' {alias=image, className=cn.com.kc.blog.pojo.BlogImage, tableAlias=images1_}
    |  |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_8_0_'
    |  +-[DOT] DotNode: 'images1_.position' {propertyName=position,dereferenceType=ALL,propertyPath=position,path=image.position,tableAlias=images1_,className=cn.com.kc.blog.pojo.BlogImage,classAlias=image}
    |  |  +-[ALIAS_REF] IdentNode: 'images1_.id' {alias=image, className=cn.com.kc.blog.pojo.BlogImage, tableAlias=images1_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_9_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[entity, image], fromElementByTableAlias=[images1_, blogentity0_], fromElementsByPath=[entity.images], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'BLOG_ENTITY blogentity0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=entity,role=null,tableName=BLOG_ENTITY,tableAlias=blogentity0_,origin=null,columns={,className=cn.com.kc.blog.pojo.BlogEntity}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join BLOG_IMAGE images1_ on blogentity0_.id=images1_.ENTITY_ID' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=image,role=cn.com.kc.blog.pojo.BlogEntity.images,tableName=BLOG_IMAGE,tableAlias=images1_,origin=BLOG_ENTITY blogentity0_,columns={blogentity0_.id ,className=cn.com.kc.blog.pojo.BlogImage}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'blogentity0_.isTemp' {propertyName=isTemp,dereferenceType=ALL,propertyPath=isTemp,path=entity.isTemp,tableAlias=blogentity0_,className=cn.com.kc.blog.pojo.BlogEntity,classAlias=entity}
          |  |  +-[ALIAS_REF] IdentNode: 'blogentity0_.id' {alias=entity, className=cn.com.kc.blog.pojo.BlogEntity, tableAlias=blogentity0_}
          |  |  \-[IDENT] IdentNode: 'isTemp' {originalText=isTemp}
          |  \-[TRUE] BooleanLiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'blogentity0_.USER_ID' {propertyName=user,dereferenceType=0,propertyPath=user,path=entity.user,tableAlias=blogentity0_,className=cn.com.kc.blog.pojo.BlogEntity,classAlias=entity}
             |  +-[ALIAS_REF] IdentNode: 'blogentity0_.id' {alias=entity, className=cn.com.kc.blog.pojo.BlogEntity, tableAlias=blogentity0_}
             |  \-[IDENT] IdentNode: 'user' {originalText=user}
             \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.ManyToOneType(cn.com.kc.blog.pojo.BlogUser)}

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select entity.id,entity.title,entity.content,entity.createdate, entity.readprivate,entity.commentable,image.id,image.name,image.description,image.position  from cn.com.kc.blog.pojo.BlogEntity entity inner join entity.images as image  where entity.isTemp = true and entity.user = ?
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select blogentity0_.id as col_0_0_, blogentity0_.title as col_1_0_, blogentity0_.content as col_2_0_, blogentity0_.createdate as col_3_0_, blogentity0_.readprivate as col_4_0_, blogentity0_.commentable as col_5_0_, images1_.id as col_6_0_, images1_.name as col_7_0_, images1_.description as col_8_0_, images1_.position as col_9_0_ from BLOG_ENTITY blogentity0_ inner join BLOG_IMAGE images1_ on blogentity0_.id=images1_.ENTITY_ID where blogentity0_.isTemp=1 and blogentity0_.USER_ID=?
DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.SQL - select blogentity0_.id as col_0_0_, blogentity0_.title as col_1_0_, blogentity0_.content as col_2_0_, blogentity0_.createdate as col_3_0_, blogentity0_.readprivate as col_4_0_, blogentity0_.commentable as col_5_0_, images1_.id as col_6_0_, images1_.name as col_7_0_, images1_.description as col_8_0_, images1_.position as col_9_0_ from BLOG_ENTITY blogentity0_ inner join BLOG_IMAGE images1_ on blogentity0_.id=images1_.ENTITY_ID where blogentity0_.isTemp=1 and blogentity0_.USER_ID=?
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: 
DEBUG main org.hibernate.loader.Loader - Result set row: 1
DEBUG main org.hibernate.loader.Loader - Result row: 
DEBUG main org.hibernate.loader.Loader - Result set row: 2
DEBUG main org.hibernate.loader.Loader - Result row: 
DEBUG main org.hibernate.loader.Loader - Result set row: 3
DEBUG main org.hibernate.loader.Loader - Result row: 
DEBUG main org.hibernate.engine.internal.StatefulPersistenceContext - Initializing non-lazy collections
DEBUG main org.springframework.orm.hibernate4.HibernateTransactionManager - Initiating transaction commit
DEBUG main org.springframework.orm.hibernate4.HibernateTransactionManager - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
DEBUG main org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@1aa0e220[valid=true]]
DEBUG main org.springframework.orm.hibernate4.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
DEBUG main org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
DEBUG main org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
DEBUG main org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
